{"ast":null,"code":"import axios from 'axios';\nimport crypt from 'crypto-js';\nexport default {\n  name: \"HomeComponent\",\n  data() {\n    return {\n      token: null,\n      urlHome: \"/home\",\n      urlValidacionDatos: \"/datos\",\n      redirect: false,\n      Error: {\n        esError: 0\n      }\n    };\n  },\n  methods: {\n    LogIn() {\n      const usuario = document.getElementById(\"usuario\").value;\n      const contrasena = document.getElementById(\"contrasena\").value;\n      const contrasenaHasheada = crypt.AES.encrypt(contrasena, \"labrem123456789\").toString();\n      console.log(contrasenaHasheada);\n      axios.post(appsettings.Backend + \"/auth/LogIn\", {\n        usuario: usuario,\n        contrasena: contrasenaHasheada\n      }).then(response => {\n        if (response.data.ErrorOperacion == 1) {\n          alert(response.data.Data);\n          return false;\n        }\n        if (response.data.ErrorInesperado == 1) {\n          alert(\"Se ha producido un error: Codigo= \" + response.data.Codigo + \" Url= \" + response.data.Url);\n          return false;\n        }\n        if (!response.data.Data.valido) {\n          console.log(response);\n          alert(\"Usuario y/o contraseña invalidos\");\n          return false;\n        }\n        if (typeof Storage !== \"undefined\") {\n          sessionStorage.setItem(\"usuario\", JSON.stringify(response.data.Data.user));\n        } else {\n          console.log(\"No se puede almacenar token en navegador\");\n        }\n        return true;\n      }).then(response => {\n        if (response) {\n          const payload = {\n            iss: appsettings.Frontend,\n            target_link_uri: appsettings.Backend,\n            login_hint: 3,\n            lti_message_hint: 2,\n            client_id: \"123456789\",\n            lti_deployment_id: 2\n          };\n          console.log(payload);\n          axios.post(appsettings.Backend + \"/login\", payload).then(response => {\n            console.log(response);\n            axios.post(appsettings.Backend, response.data).then(response => {\n              console.log(response);\n              if (typeof Storage !== \"undefined\") {\n                sessionStorage.setItem(\"token\", response.data.token);\n                sessionStorage.setItem(\"permisos\", response.data.permisos);\n              } else {\n                console.log(\"No se puede almacenar token en navegador\");\n              }\n              //const usuario = JSON.parse(sessionStorage.getItem('usuario'));\n              //const Nombre = usuario.nombre +' '+ usuario.apellido;\n              location.href = this.urlHome; //+ '?nombre=atilio'//+ response.data.token;\n            }).catch(() => {\n              alert(\"Se ha producido un error: Autenticacion LTI - No se pudo validar ltik\");\n            });\n          }).catch(() => {\n            alert(\"Se ha producido un error: Autenticacion LTI - No se pudo generar ltik\");\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n        alert(\"Se ha producido un error - Autenticacion de credenciales\");\n      });\n    }\n  },\n  created() {\n    if (this.$route.params.data) {\n      const params = JSON.parse(this.$route.params.data);\n      console.log(params);\n      axios.post(appsettings.Backend + \"/lti/ValidarToken\", {\n        token: params.token,\n        hash: params.hash\n      }).then(response => {\n        if (response.data.ErrorOperacion == 0) {\n          if (response.data.ErrorInesperado == 0) {\n            if (response.data.Data) {\n              sessionStorage.setItem(\"token\", params.token);\n              sessionStorage.setItem(\"permisos\", params.permisos);\n              sessionStorage.setItem(\"usuario\", JSON.stringify(params.usuario));\n              if (params.validado) {\n                location.href = this.urlHome;\n              } else {\n                location.href = this.urlValidacionDatos;\n              }\n            }\n          } else {\n            alert(\"Se ha producido un error: Codigo= \" + response.data.Codigo + \" Url= \" + response.data.Url);\n          }\n        } else {\n          alert(response.data.Data);\n        }\n      }).catch(error => {\n        this.Error[\"esError\"] = 1;\n        this.Error[\"codigo\"] = error.response.status;\n        this.Error[\"mensaje\"] = error.response.data.error;\n        this.Error[\"descripcion\"] = error.response.data.details.description;\n      });\n    }\n  },\n  components: {\n    PageErrorComponent\n  }\n};","map":{"version":3,"names":["axios","crypt","name","data","token","urlHome","urlValidacionDatos","redirect","Error","esError","methods","LogIn","usuario","document","getElementById","value","contrasena","contrasenaHasheada","AES","encrypt","toString","console","log","post","appsettings","Backend","then","response","ErrorOperacion","alert","Data","ErrorInesperado","Codigo","Url","valido","Storage","sessionStorage","setItem","JSON","stringify","user","payload","iss","Frontend","target_link_uri","login_hint","lti_message_hint","client_id","lti_deployment_id","permisos","location","href","catch","err","created","$route","params","parse","hash","validado","error","status","details","description","components","PageErrorComponent"],"sources":["/Users/aeballes/Desktop/labrem/src/components/HomeComponent.vue"],"sourcesContent":["<template>\n        <div class=\"row justify-content-center\">\n            <div class=\"col-xl-10\">\n                <div class=\"card o-hidden border-0 shadow-lg my-5\">\n                    <div class=\"card-body p-0\">\n                        <div class=\"row\">\n                            <div class=\"col-lg-6 d-none d-lg-block\">\n                                <img style=\"margin-left: auto; margin-right: auto;\" src=\"../../public/assets/img/logo.jpg\" width=\"500px\">\n                            </div>\n                \n                            <div class=\"col-lg-6\">\n                                <div class=\"p-5\">\n                                    <div class=\"text-center\">\n                                        <h1 class=\"h4 text-gray-900 mb-4\">LABORATORIOS REMOTOS UNT</h1>\n                                    </div>\n                                    \n                                    <form class=\"user\">\n                                        <div class=\"form-group\">\n                                            <input type=\"email\" class=\"form-control form-control-user\"\n                                                id=\"usuario\" aria-describedby=\"emailHelp\"\n                                                placeholder=\"Correo electronico\">\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <input type=\"password\" class=\"form-control form-control-user\"\n                                                id=\"contrasena\" placeholder=\"Contraseña\">\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <div class=\"custom-control custom-checkbox small\">\n                                                <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck\">\n                                                <label class=\"custom-control-label\" for=\"customCheck\">Recuerdame</label>\n                                            </div>\n                                        </div>\n                                        <a v-on:click=\"LogIn\" class=\"btn btn-primary btn-user btn-block\">\n                                            Iniciar Sesion\n                                        </a>\n                                    </form>\n                                    <hr>\n                                    <div class=\"text-center\">\n                                        <a class=\"small\" href=\"\">¿Olvidaste tu contraseña?</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n</template>\n  \n<script>\n    import axios from 'axios';\n    import crypt from 'crypto-js';\n\n    export default {\n        name: \"HomeComponent\",\n        data() {\n            return {\n                token: null,\n                urlHome: \"/home\",\n                urlValidacionDatos:\"/datos\",\n                redirect: false,\n                Error: {\n                    esError:0\n                }\n            };\n        },\n        methods: {\n            LogIn() {\n                const usuario = document.getElementById(\"usuario\").value;\n                const contrasena = document.getElementById(\"contrasena\").value;\n                const contrasenaHasheada = crypt.AES.encrypt(contrasena, \"labrem123456789\").toString();\n                console.log(contrasenaHasheada);\n                axios.post(appsettings.Backend+\"/auth/LogIn\", { usuario: usuario, contrasena: contrasenaHasheada })\n                    .then(response => {\n                    if (response.data.ErrorOperacion == 1) {\n                        alert(response.data.Data);\n                        return false;\n                    }\n                    if (response.data.ErrorInesperado == 1) {\n                        alert(\"Se ha producido un error: Codigo= \" + response.data.Codigo + \" Url= \" + response.data.Url);\n                        return false;\n                    }\n                    if (!response.data.Data.valido) {\n                        console.log(response);\n                        alert(\"Usuario y/o contraseña invalidos\");\n                        return false;\n                    }\n                    if (typeof (Storage) !== \"undefined\") {\n                        sessionStorage.setItem(\"usuario\", JSON.stringify(response.data.Data.user));\n                    }\n                    else {\n                        console.log(\"No se puede almacenar token en navegador\");\n                    }\n                    return true;\n                })\n                    .then(response => {\n                    if (response) {\n                        const payload ={ iss: appsettings.Frontend, target_link_uri: appsettings.Backend, login_hint: 3, lti_message_hint: 2, client_id: \"123456789\", lti_deployment_id: 2 }\n                        console.log(payload);\n                        axios.post(appsettings.Backend+\"/login\",payload)\n                            .then(response => {\n                                console.log(response);\n                            axios.post(appsettings.Backend, response.data)\n                                .then(response => {\n                                console.log(response);\n                                if (typeof (Storage) !== \"undefined\") {\n                                    sessionStorage.setItem(\"token\", response.data.token);\n                                    sessionStorage.setItem(\"permisos\", response.data.permisos);\n                                }\n                                else {\n                                    console.log(\"No se puede almacenar token en navegador\");\n                                }\n                                //const usuario = JSON.parse(sessionStorage.getItem('usuario'));\n                                //const Nombre = usuario.nombre +' '+ usuario.apellido;\n                                location.href = this.urlHome; //+ '?nombre=atilio'//+ response.data.token;\n                            })\n                                .catch(() => {\n                                alert(\"Se ha producido un error: Autenticacion LTI - No se pudo validar ltik\");\n                            });\n                        }).catch(() => {\n                            alert(\"Se ha producido un error: Autenticacion LTI - No se pudo generar ltik\");\n                        });\n                    }\n                })\n                    .catch((err) => {\n                    console.log(err);\n                    alert(\"Se ha producido un error - Autenticacion de credenciales\");\n                });\n            }\n        },\n        created() {\n            if (this.$route.params.data) {\n                const params = JSON.parse(this.$route.params.data);\n                console.log(params);\n\n                axios.post(appsettings.Backend+\"/lti/ValidarToken\", {token:params.token,hash: params.hash})\n                    .then(response => {\n                    if (response.data.ErrorOperacion == 0) {\n                        if (response.data.ErrorInesperado == 0) {\n                            if (response.data.Data) {\n                                sessionStorage.setItem(\"token\",params.token);\n                                sessionStorage.setItem(\"permisos\",params.permisos);\n                                sessionStorage.setItem(\"usuario\",JSON.stringify(params.usuario));\n                                \n                                if(params.validado){\n                                    location.href = this.urlHome;\n                                }\n                                else{\n                                    location.href = this.urlValidacionDatos;\n                                }\n                                \n                            }\n                        }\n                        else {\n                            alert(\"Se ha producido un error: Codigo= \" + response.data.Codigo + \" Url= \" + response.data.Url);\n                        }\n                    }\n                    else {\n                        alert(response.data.Data);\n                    }\n                })\n                    .catch((error) => {\n                    this.Error[\"esError\"] = 1;\n                    this.Error[\"codigo\"] = error.response.status;\n                    this.Error[\"mensaje\"] = error.response.data.error;\n                    this.Error[\"descripcion\"] = error.response.data.details.description;\n                });\n            }\n        },\n        components: { PageErrorComponent }\n    }\n  </script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}