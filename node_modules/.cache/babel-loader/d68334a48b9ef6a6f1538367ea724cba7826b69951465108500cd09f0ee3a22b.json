{"ast":null,"code":"import { createApp } from 'vue';\nimport { Store } from './utils/StoreUtils';\nimport Router from './Router';\nimport App from './App.vue';\nimport Axios from 'axios';\nconst app = createApp(App);\napp.use(Router);\napp.use(Store);\n\n// Agrega un interceptor para las respuestas HTTP\nAxios.interceptors.response.use(response => {\n  const token = response.headers.authorization;\n  if (token) {\n    // Guarda el token en el estado de Vuex\n    Store.commit('setToken', token);\n  }\n  return response;\n}, error => {\n  return Promise.reject(error);\n});\napp.mount('#app');","map":{"version":3,"names":["createApp","Store","Router","App","Axios","app","use","interceptors","response","token","headers","authorization","commit","error","Promise","reject","mount"],"sources":["/Users/aeballes/Desktop/labrem/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\nimport { Store } from './utils/StoreUtils'\nimport Router from './Router'\nimport App from './App.vue'\nimport Axios from 'axios'\n\nconst app = createApp(App)\napp.use(Router)\napp.use(Store)\n\n// Agrega un interceptor para las respuestas HTTP\nAxios.interceptors.response.use((response) => {\n    const token = response.headers.authorization;\n  \n    if (token) {\n      // Guarda el token en el estado de Vuex\n      Store.commit('setToken', token);\n    }\n  \n    return response;\n  }, (error) => {\n    return Promise.reject(error);\n  });\napp.mount('#app')"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,SAASC,KAAK,QAAQ,oBAAoB;AAC1C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGL,SAAS,CAACG,GAAG,CAAC;AAC1BE,GAAG,CAACC,GAAG,CAACJ,MAAM,CAAC;AACfG,GAAG,CAACC,GAAG,CAACL,KAAK,CAAC;;AAEd;AACAG,KAAK,CAACG,YAAY,CAACC,QAAQ,CAACF,GAAG,CAAEE,QAAQ,IAAK;EAC1C,MAAMC,KAAK,GAAGD,QAAQ,CAACE,OAAO,CAACC,aAAa;EAE5C,IAAIF,KAAK,EAAE;IACT;IACAR,KAAK,CAACW,MAAM,CAAC,UAAU,EAAEH,KAAK,CAAC;EACjC;EAEA,OAAOD,QAAQ;AACjB,CAAC,EAAGK,KAAK,IAAK;EACZ,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;AACJR,GAAG,CAACW,KAAK,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}