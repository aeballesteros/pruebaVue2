{"ast":null,"code":"import { createApp } from 'vue';\nimport { Store } from './utils/StoreUtils';\nimport Router from './Router';\nimport App from './App.vue';\nimport Axios from 'axios';\nimport { ObtenerToken } from './utils/TokenUtils';\nconst app = createApp(App);\napp.use(Router);\napp.use(Store);\n\n// Se agrega un interceptor para las respuestas HTTP\nAxios.interceptors.response.use(async response => {\n  const token = response.headers.authorization;\n  if (token) {\n    // Guarda el token en el estado de Vuex\n    Store.commit('setToken', token);\n  }\n  return response;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Se agrega un interceptor para las request HTTP\nAxios.interceptors.request.use(async config => {\n  const token = await ObtenerToken();\n\n  // Se agrega token a header \n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\napp.mount('#app');","map":{"version":3,"names":["createApp","Store","Router","App","Axios","ObtenerToken","app","use","interceptors","response","token","headers","authorization","commit","error","Promise","reject","request","config","Authorization","mount"],"sources":["/Users/aeballes/Desktop/labrem/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\nimport { Store } from './utils/StoreUtils'\nimport Router from './Router'\nimport App from './App.vue'\nimport Axios from 'axios'\nimport { ObtenerToken } from './utils/TokenUtils'\n\nconst app = createApp(App)\napp.use(Router)\napp.use(Store)\n\n// Se agrega un interceptor para las respuestas HTTP\nAxios.interceptors.response.use(async (response) => {\n        const token = response.headers.authorization;\n  \n        if (token) {\n        // Guarda el token en el estado de Vuex\n        Store.commit('setToken', token);\n        }\n    \n        return response;\n    }, \n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\n// Se agrega un interceptor para las request HTTP\nAxios.interceptors.request.use(async (config) => {\n    const token = await ObtenerToken();\n\n    // Se agrega token a header \n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n    }\n    \n    return config;\n    }, \n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\napp.mount('#app')"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,SAASC,KAAK,QAAQ,oBAAoB;AAC1C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,oBAAoB;AAEjD,MAAMC,GAAG,GAAGN,SAAS,CAACG,GAAG,CAAC;AAC1BG,GAAG,CAACC,GAAG,CAACL,MAAM,CAAC;AACfI,GAAG,CAACC,GAAG,CAACN,KAAK,CAAC;;AAEd;AACAG,KAAK,CAACI,YAAY,CAACC,QAAQ,CAACF,GAAG,CAAC,MAAOE,QAAQ,IAAK;EAC5C,MAAMC,KAAK,GAAGD,QAAQ,CAACE,OAAO,CAACC,aAAa;EAE5C,IAAIF,KAAK,EAAE;IACX;IACAT,KAAK,CAACY,MAAM,CAAC,UAAU,EAAEH,KAAK,CAAC;EAC/B;EAEA,OAAOD,QAAQ;AACnB,CAAC,EACAK,KAAK,IAAK;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACAV,KAAK,CAACI,YAAY,CAACS,OAAO,CAACV,GAAG,CAAC,MAAOW,MAAM,IAAK;EAC7C,MAAMR,KAAK,GAAG,MAAML,YAAY,CAAC,CAAC;;EAElC;EACA,IAAIK,KAAK,EAAE;IACPQ,MAAM,CAACP,OAAO,CAACQ,aAAa,GAAI,UAAST,KAAM,EAAC;EACpD;EAEA,OAAOQ,MAAM;AACb,CAAC,EACAJ,KAAK,IAAK;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAEDR,GAAG,CAACc,KAAK,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}