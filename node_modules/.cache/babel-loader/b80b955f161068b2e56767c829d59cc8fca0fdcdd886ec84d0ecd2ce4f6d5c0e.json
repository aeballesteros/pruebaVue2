{"ast":null,"code":"import { createApp } from 'vue';\nimport { Store } from './utils/StoreUtils';\nimport Router from './Router';\nimport App from './App.vue';\n// import Axios from 'axios'\n// import { ObtenerToken } from './utils/TokenUtils'\n\nconst app = createApp(App);\napp.use(Router);\napp.use(Store);\n\n// // Se agrega un interceptor para las respuestas HTTP\n// Axios.interceptors.response.use(async (response) => {\n//         const token = response.headers.authorization;\n\n//         if (token) {\n//         // Guarda el token en el estado de Vuex\n//         Store.commit('setToken', token);\n//         }\n\n//         return response;\n//     }, \n//     (error) => {\n//         return Promise.reject(error);\n//     }\n// );\n\n// // Se agrega un interceptor para las request HTTP\n// Axios.interceptors.request.use(async (config) => {\n//     const token = await ObtenerToken();\n\n//     // Se agrega token a header \n//     if (token) {\n//         config.headers.Authorization = `Bearer ${token}`;\n//     }\n\n//     return config;\n//     }, \n//     (error) => {\n//         return Promise.reject(error);\n//     }\n// );\n\napp.mount('#app');","map":{"version":3,"names":["createApp","Store","Router","App","app","use","mount"],"sources":["/Users/aeballes/Desktop/labrem/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\nimport { Store } from './utils/StoreUtils'\nimport Router from './Router'\nimport App from './App.vue'\n// import Axios from 'axios'\n// import { ObtenerToken } from './utils/TokenUtils'\n\nconst app = createApp(App)\napp.use(Router)\napp.use(Store)\n\n// // Se agrega un interceptor para las respuestas HTTP\n// Axios.interceptors.response.use(async (response) => {\n//         const token = response.headers.authorization;\n  \n//         if (token) {\n//         // Guarda el token en el estado de Vuex\n//         Store.commit('setToken', token);\n//         }\n    \n//         return response;\n//     }, \n//     (error) => {\n//         return Promise.reject(error);\n//     }\n// );\n\n// // Se agrega un interceptor para las request HTTP\n// Axios.interceptors.request.use(async (config) => {\n//     const token = await ObtenerToken();\n\n//     // Se agrega token a header \n//     if (token) {\n//         config.headers.Authorization = `Bearer ${token}`;\n//     }\n    \n//     return config;\n//     }, \n//     (error) => {\n//         return Promise.reject(error);\n//     }\n// );\n\napp.mount('#app')"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,SAASC,KAAK,QAAQ,oBAAoB;AAC1C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,GAAG,MAAM,WAAW;AAC3B;AACA;;AAEA,MAAMC,GAAG,GAAGJ,SAAS,CAACG,GAAG,CAAC;AAC1BC,GAAG,CAACC,GAAG,CAACH,MAAM,CAAC;AACfE,GAAG,CAACC,GAAG,CAACJ,KAAK,CAAC;;AAEd;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAG,GAAG,CAACE,KAAK,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}