{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"p-5\"\n};\nconst _hoisted_2 = {\n  class: \"text-center\"\n};\nconst _hoisted_3 = {\n  class: \"h4 text-gray-900 mb-4\"\n};\nconst _hoisted_4 = {\n  class: \"col-lg-12\"\n};\nconst _hoisted_5 = [\"for\"];\nconst _hoisted_6 = [\"v-model\", \"id\", \"type\", \"value\"];\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h1\", _hoisted_3, _toDisplayString($data.Titulo), 1 /* TEXT */)]), _createElementVNode(\"form\", {\n    class: \"user\",\n    onSubmit: _cache[1] || (_cache[1] = (...args) => _ctx.handleSubmit && _ctx.handleSubmit(...args))\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.DatosFormulario, Input => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: Input.Nombre,\n      class: \"form-group\"\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"label\", {\n      class: \"col-lg-8\",\n      for: Input.Nombre\n    }, _toDisplayString(Input.Etiqueta), 9 /* TEXT, PROPS */, _hoisted_5), _createElementVNode(\"input\", {\n      class: \"form-control form-control-user\",\n      placeholder: \"Ingrese texto...\",\n      \"v-model\": $data.DatosFormulario[Input.Nombre],\n      id: Input.Nombre,\n      type: Input.Tipo,\n      value: Input.Valor\n    }, null, 8 /* PROPS */, _hoisted_6)])]);\n  }), 128 /* KEYED_FRAGMENT */)), _hoisted_7, _createElementVNode(\"a\", {\n    class: \"btn btn-primary btn-user btn-block\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.Aceptar && $options.Aceptar(...args))\n  }, \" Aceptar \")], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$data","Titulo","onSubmit","_cache","args","_ctx","handleSubmit","_Fragment","_renderList","DatosFormulario","Input","key","Nombre","_hoisted_4","for","Etiqueta","_hoisted_5","placeholder","id","type","Tipo","value","Valor","_hoisted_7","onClick","$options","Aceptar"],"sources":["/Users/aeballes/Desktop/labrem/src/components/commons/FormComponent.vue"],"sourcesContent":["<!-- Componente que sirve solamente para creacion o modificacion de objetos  -->\n\n<template>\n    <div class=\"p-5\">\n        <div class=\"text-center\">\n            <h1 class=\"h4 text-gray-900 mb-4\">{{ Titulo }}</h1>\n        </div>\n        <form class=\"user\" @submit=\"handleSubmit\">\n            <div v-for=\"Input in DatosFormulario\" :key=\"Input.Nombre\" class=\"form-group\">\n                <div class=\"col-lg-12\">\n                    <label class=\"col-lg-8\" :for=\"Input.Nombre\">{{ Input.Etiqueta }}</label>\n                    <input class=\"form-control form-control-user\" placeholder=\"Ingrese texto...\" :v-model=\"DatosFormulario[Input.Nombre]\" :id=\"Input.Nombre\" :type=\"Input.Tipo\" :value=\"Input.Valor\">\n                </div>\n            </div>\n            <hr>\n            <a class=\"btn btn-primary btn-user btn-block\" @click=\"Aceptar\">\n                Aceptar\n            </a>\n        </form>\n    </div>\n</template>\n  \n<script>\n\n    import appsettings  from 'appsettings';\n    import Axios from 'axios'\n\n    export default {\n        props: {\n            TipoProps: {\n                type: String,\n                required: false\n            },\n            ClaseProps: {\n                type: String,\n                required: false\n            },\n            InputsProps: {\n                type: String,\n                required: false,\n            },\n            DatosProps: {\n                type: String,\n                required: false,\n            },\n            UrlProps: {\n                type: String,\n                required: false,\n            }\n        },\n        data() {\n            return {\n                Props: {},\n                Tipo: '',\n                Clase: '',\n                Inputs: '',\n                Datos: '',\n                Url: '',\n                Titulo: '',\n                Error: 0,\n                DatosFormulario: []\n            };\n        },\n        created() {\n            // Se traen propiedades del state en caso de ser redireccion del componente\n            this.Props = this.$store.state.FormComponent;\n            \n            // Si se trata de una instancia las variables toman el valor de props que brinda el padre, caso contrario toma el de redireccion\n            this.Tipo = this.TipoProps? this.TipoProps : ( this.Props? this.Props.Tipo : null);\n            this.Clase = this.ClaseProps? this.ClaseProps : ( this.Props? this.Props.Clase : null);\n            this.Inputs = this.InputsProps? this.InputsProps : ( this.Props? this.Props.Inputs : null);\n            this.Datos = this.DatosProps? this.DatosProps : ( this.Props? this.Props.Datos : null);\n            this.Url = this.UrlProps? this.UrlProps : ( this.Props? this.Props.Url : null);\n\n            // Si aluguno de los parametros necesarios para construir el componente son nulos, no se lo renderiza\n            if(!this.Tipo || !this.Clase || !this.Inputs || !this.Url){\n                const payload = {\n                    name: 'PageErrorComponent',\n                    props: {\n                        Codigo: '600',\n                        Mensaje: 'FRONT_ERROR_REDIRECT',\n                        Descripcion: 'Error de redireccion'\n                    }\n                }\n                this.$store.commit('setPropertiesRoute',payload);\n                this.$router.push({name:'error'})\n            }\n            // Segun el valor de los parametros se cargan datos para el formulario\n            this.Titulo = this.Tipo == \"C\" ? (\"Nuevo/a \" + this.Clase) : (this.Tipo == \"M\" ? (\"Modificar \" + this.Clase) : null);\n            this.DatosFormulario = this.Inputs? JSON.parse(this.Inputs) : null;\n\n            if (this.Datos && this.DatosFormulario) {\n                const datosDeserializados = JSON.parse(this.Datos);\n                if (Array.isArray(datosDeserializados) && datosDeserializados.length > 0) {\n                    this.DatosFormulario.forEach(input => {\n                        datosDeserializados.forEach(dato => {\n                            if (input.Nombre == dato.Nombre) {\n                                input[\"Valor\"] = dato.Valor;\n                            }\n                            else {\n                                input[\"Valor\"] = \"\";\n                            }\n                        });\n                    });\n                }\n            }\n        },\n        methods: {\n            // Metodo que se encarga de enviar la peticion post del formulario al backend\n            async Aceptar() {\n                // Se arma payload para solicitud HTTP al backend\n                let payload = {};\n                this.DatosFormulario.forEach(dato => {\n                    payload[dato.Nombre] = document.getElementById(dato.Nombre).value;\n                });\n\n                let url;\n\n                // Se busca la url del backend donde se envian los datos del formulario\n                appsettings.urlsBackend.forEach(modulo => {\n                    if(this.Clase in modulo){\n                        if(this.Tipo=='C'){\n                            url = modulo[this.Clase].Crear;\n                        }\n                        else{\n                            url = modulo[this.Clase].Modificar;\n                        }\n                        \n                    }\n                });\n\n                try{\n                    const respuesta = await Axios.post(url,payload);\n\n                    if (respuesta.data.ErrorOperacion == 0) {\n                            if (respuesta.data.ErrorInesperado == 0) {\n                                // Mostrar pop up con respuesta\n                            }\n                            else{\n                                // Mostrar pop up con error de backend\n                            }\n                    }\n                    else {\n                        // Mostrar popup con error de operacion\n                    }\n                    \n                }\n                catch(error){\n                    console.log(error);\n                }\n                \n    \n            }\n        }\n    };\n</script>"],"mappings":";;EAGSA,KAAK,EAAC;AAAK;;EACPA,KAAK,EAAC;AAAa;;EAChBA,KAAK,EAAC;AAAuB;;EAIxBA,KAAK,EAAC;AAAW;;;gCAK1BC,mBAAA,CAAI;;;uBAXZC,mBAAA,CAgBM,OAhBNC,UAgBM,GAfFF,mBAAA,CAEM,OAFNG,UAEM,GADFH,mBAAA,CAAmD,MAAnDI,UAAmD,EAAAC,gBAAA,CAAdC,KAAA,CAAAC,MAAM,iB,GAE/CP,mBAAA,CAWO;IAXDD,KAAK,EAAC,MAAM;IAAES,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,YAAA,IAAAD,IAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;yBACpCT,mBAAA,CAKMY,SAAA,QAAAC,WAAA,CALeR,KAAA,CAAAS,eAAe,EAAxBC,KAAK;yBAAjBf,mBAAA,CAKM;MALiCgB,GAAG,EAAED,KAAK,CAACE,MAAM;MAAEnB,KAAK,EAAC;QAC5DC,mBAAA,CAGM,OAHNmB,UAGM,GAFFnB,mBAAA,CAAwE;MAAjED,KAAK,EAAC,UAAU;MAAEqB,GAAG,EAAEJ,KAAK,CAACE;wBAAWF,KAAK,CAACK,QAAQ,wBAAAC,UAAA,GAC7DtB,mBAAA,CAAiL;MAA1KD,KAAK,EAAC,gCAAgC;MAACwB,WAAW,EAAC,kBAAkB;MAAE,SAAO,EAAEjB,KAAA,CAAAS,eAAe,CAACC,KAAK,CAACE,MAAM;MAAIM,EAAE,EAAER,KAAK,CAACE,MAAM;MAAGO,IAAI,EAAET,KAAK,CAACU,IAAI;MAAGC,KAAK,EAAEX,KAAK,CAACY;;kCAGlLC,UAAI,EACJ7B,mBAAA,CAEI;IAFDD,KAAK,EAAC,oCAAoC;IAAE+B,OAAK,EAAArB,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEqB,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAtB,IAAA,CAAO;KAAE,WAE/D,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}